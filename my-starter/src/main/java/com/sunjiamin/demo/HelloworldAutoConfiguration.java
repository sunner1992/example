package com.sunjiamin.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

//相当于一个普通的 java 配置类
@Configuration
//当 HelloworldService 在类路径的条件下
@ConditionalOnClass({ HelloworldService.class })
//将 application.properties 的相关的属性字段与该类一一对应，并生成 Bean
@EnableConfigurationProperties(HelloworldProperties.class)
public class HelloworldAutoConfiguration {

// 注入属性类
	@Autowired
	private HelloworldProperties hellowordProperties;

	@Bean
// 当容器没有这个 Bean 的时候才创建这个 Bean
	@ConditionalOnMissingBean(HelloworldService.class)
	public HelloworldService helloworldService() {
		HelloworldService helloworldService = new HelloworldService();
		helloworldService.setWords(hellowordProperties.getWords());
		return helloworldService;
	}
}
